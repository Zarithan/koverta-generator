import streamlit as st
import pandas as pd
from docx import Document
import shutil
import os

# Load the postal code database
@st.cache_data
def ucitaj_bazu():
    return pd.read_csv("postanski_brojevi_rs.csv")

def format_postanski_broj(broj):
    return ' '.join(str(broj))

def popuni_prvu_stranu(template_path, output_path, ime, adresa, mesto, post_broj_fmt):
    if not os.path.exists(template_path):
        raise FileNotFoundError(f"Template not found: {template_path}")

    shutil.copy(template_path, output_path)
    doc = Document(output_path)
    for para in doc.paragraphs:
        if "–ò–ú–ï –ò –ü–†–ï–ó–ò–ú–ï" in para.text or "–ù–ê–ó–ò–í –û–†–ì–ê–ù–ò–ó–ê–¶–ò–à–ï" in para.text:
            para.text = para.text.replace("–ò–ú–ï –ò –ü–†–ï–ó–ò–ú–ï –ò–õ–ò –ù–ê–ó–ò–í –û–†–ì–ê–ù–ò–ó–ê–¶–ò–à–ï", ime)
        elif "–ê–¥—Ä–µ—Å–∞" in para.text:
            para.text = para.text.replace("–ê–¥—Ä–µ—Å–∞", adresa)
        elif "–ú–µ—Å—Ç–æ" in para.text:
            para.text = para.text.replace("–ú–µ—Å—Ç–æ", mesto)
        elif "–ü–æ—à—Ç–∞–Ω—Å–∫–∏ –±—Ä–æ—ò" in para.text:
            para.text = para.text.replace("–ü–æ—à—Ç–∞–Ω—Å–∫–∏ –±—Ä–æ—ò", post_broj_fmt)
    doc.save(output_path)

def popuni_drugu_stranu(template_path, output_path, broj_predmeta, primalac, adresa):
    if not os.path.exists(template_path):
        raise FileNotFoundError(f"Template not found: {template_path}")

    shutil.copy(template_path, output_path)
    doc = Document(output_path)
    for para in doc.paragraphs:
        if "–±—Ä–æ—ò –ø—Ä–µ–¥–º–µ—Ç–∞" in para.text:
            para.text = para.text.replace("–±—Ä–æ—ò –ø—Ä–µ–¥–º–µ—Ç–∞", broj_predmeta)
        elif "–ü—Ä–∏–º–∞–ª–∞—Ü" in para.text:
            para.text = para.text.replace("–ü—Ä–∏–º–∞–ª–∞—Ü", primalac)
        elif "–ê–¥—Ä–µ—Å–∞" in para.text:
            para.text = para.text.replace("–ê–¥—Ä–µ—Å–∞", adresa)
    doc.save(output_path)

# Streamlit UI
st.title("üì¨ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–≤–µ—Ä–∞—Ç–∞ (–æ–±–∞ —à–∞–±–ª–æ–Ω–∞)")

ime = st.text_input("–ü—Ä–∏–º–∞–ª–∞—Ü / –ù–∞–∑–∏–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—ò–µ")
adresa = st.text_input("–ê–¥—Ä–µ—Å–∞")
mesto = st.text_input("–ú–µ—Å—Ç–æ")
broj_predmeta = st.text_input("–ë—Ä–æ—ò –ø—Ä–µ–¥–º–µ—Ç–∞")

if st.button("–ì–µ–Ω–µ—Ä–∏—à–∏ –æ–±–µ —Å—Ç—Ä–∞–Ω–µ"):
    baza = ucitaj_bazu()
    rezultat = baza[baza['–ú–µ—Å—Ç–æ'].str.lower() == mesto.lower()]
    
    if rezultat.empty:
        st.error("‚ö†Ô∏è –ú–µ—Å—Ç–æ –Ω–∏—ò–µ –ø—Ä–æ–Ω–∞—í–µ–Ω–æ —É –±–∞–∑–∏.")
    else:
        post_broj = int(rezultat.iloc[0]['–ü–æ—à—Ç–∞–Ω—Å–∫–∏ –±—Ä–æ—ò'])
        post_broj_fmt = format_postanski_broj(post_broj)

        os.makedirs("output", exist_ok=True)
        prva_out = f"output/prva_{ime.replace(' ', '_')}.docx"
        druga_out = f"output/druga_{ime.replace(' ', '_')}.docx"

        try:
            popuni_prvu_stranu("first_template.docx", prva_out, ime, adresa, mesto, post_broj_fmt)
            popuni_drugu_stranu("second_template.docx", druga_out, broj_predmeta, ime, adresa)

            with open(prva_out, "rb") as f1:
                st.download_button("‚¨áÔ∏è –ü—Ä–µ—É–∑–º–∏ –ø—Ä–≤—É —Å—Ç—Ä–∞–Ω—É", f1, file_name=os.path.basename(prva_out))

            with open(druga_out, "rb") as f2:
                st.download_button("‚¨áÔ∏è –ü—Ä–µ—É–∑–º–∏ –¥—Ä—É–≥—É —Å—Ç—Ä–∞–Ω—É", f2, file_name=os.path.basename(druga_out))
        except FileNotFoundError as e:
            st.error(str(e))
